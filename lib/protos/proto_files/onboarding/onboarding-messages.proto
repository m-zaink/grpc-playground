syntax = "proto3";
package ae.falcon.onboarding.v1;
option java_package = "ae.falcon.onboarding.v1.messages";
import "common-messages.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

enum Gender {

    // Dummy enum value.
    DUMMY_GENDER = 0;

    // Male enum value.
    MALE = 1;

    // Female enum value.
    FEMALE = 2;
}

enum OnBoardingStatus {

    // Default value, user has been created.
    CREATED = 0;

    // User completed onBoarding process.
    ONBOARDED = 1;

    // User completed card verification process.
    // Client is not supposed to set this, this is for internal use.
    VERIFIED = 2;

    // Card verification failed.
    // Client is not supposed to set this, this is for internal use.
    VERIFICATION_FAILED = 3;
}

message UserDetails {

    // Mandatory non blank string.
    string name = 1;

    // Mandatory Field.
    string email_id = 2;

    // Mandatory valid field.
    PhoneNumber phone = 3;

    // Mandatory valid field.
    Gender gender = 4;
}

message Preferences {

    // Id to be send by device in SetPreferencesRequest.
    int32 preference_id = 1;

    // Name to be displayed for preference by device.
    string name = 2;

    // Image url to be displayed for preference by device.
    string image_url = 3;

    // Category of a preference.
    string category = 4;

    // True is user has selected.
    bool selected = 5;
}


message PhoneNumber {

    // Mandatory field. Eg 91
    string phone_code = 1;

    // Mandatory field.
    string phone_number = 2;
}


message EmailPassword {

    // Mandatory field.
    string email_id = 1;

    // Mandatory field.
    string password = 2;
}

message UserProfile {

    // User first and last name
    string name = 1;

    // User phone number
    PhoneNumber phone = 2;

    // User nationality
    string nationality_code = 3;

    // User Gender.
    Gender gender = 4;

    // Image url of profile picture.
    string profile_pic_url = 5;
}

message UpdatePhone {

    // Otp validation code received in response to validateOtp api.
    string otp_validation_code = 1;

    // Phone number to be updated
    PhoneNumber phone = 2;
}


message ValidateUserInputRequest {

    // To use this to check user is registered with phone number
    PhoneNumber phone = 1;

    // To use this to check user is registered with emailId
    // valid non blank and Must match : '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    google.protobuf.StringValue email_id = 2;

    // To use this to check password validation
    google.protobuf.StringValue password = 3;
}

message SendOtpRequest {

    oneof otp_identifier {

        // To generate otp for phone.
        PhoneNumber phone = 1;

        // True to generate otp for email.
        bool otp_on_mail = 2;
    }

    // Mandatory Field.
    string email_id = 4;

    // Mandatory UUID4 id used to identify a session.
    // Send the same session token when user requests to resend OTP or validates
    // OTP.
    string session_token = 3;
}

message SendOtpResponse {

    // Time until which the sent otp is valid.
    // Client is recommended to reset the session token once expiry has passed.
    google.protobuf.Duration expiry = 1;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 2;
}

message ValidateOtpRequest {

    // Mandatory field to be send by device.
    string email_id = 1;

    // Mandatory field sent by device. Should match '\d{4}'
    string otp = 2;

    // Mandatory field sent by device. Should match value in SendOtpRequest.
    string session_token = 3;
}

message ValidateOtpResponse {

    // A token used to indicate that OTP is successfully validated
    // Needs to be sent to the service which requires otp validation (signUp or resetPassword)
    string otp_validation_token = 1;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 2;
}

message SignUpRequest {

    // All fields in user_details are mandatory.
    UserDetails user_details = 1;

    // To ensure otp validation was successful.
    string otp_validation_token = 2;

    // Mandatory field to be send by device.
    string password = 3;

    // Mandatory field derived from TokenizeCardResponse.card_uid in common-service-messages.proto
    string card_token = 4;

    // Same as sent during card tokenization.
    string session_token = 5;
}

message UserAuthenticationResponse {

    // Auth token for authenticated services
    string jwt_token = 1;

    // unix epoch of expiry time
    google.protobuf.Timestamp expiry_date_time = 2;

    // If it's non null value then client after this response has to redirect user to given deep_link
    string redirect_deep_link = 3;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 4;

    // user uid of user
    string user_uid = 5;
}

message UserNationalityRequest {

    // Non blank value, should derived from Country.phone_code
    string nationality_code = 1;
}

message SetLockRequest {

    oneof setPin {

        // If user applies for mPin.Should match '\d{4}'
        string pin = 1;

        // True if user applies for device lock.
        bool create_token = 2;
    }
}

message SetLockResponse {

    // Pin will be generated from backend in case of device lock.
    string pin = 1;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 2;
}

message FetchPreferencesResponse {

    // List of available preferences.
    repeated Preferences preferences = 1;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 2;
}

message SetPreferencesRequest {

    // Valid preference_id to be derived from FetchPreferencesResponse.Preferences.preference_id
    repeated int32 preference_id = 1;
}

message LoginRequest {

    oneof auth {

        // In case of login using email address and password.
        EmailPassword email_password = 1;

        // In case of login using mPin.
        string pin = 2;

        // In case of login using device lock.
        string phone_token = 3;
    }
}

message FetchIdentifierRequest {

    // Mandatory field. Should match '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    string email_id = 1;
}

message FetchIdentifierResponse {

    // Mandatory field to be send be server. (masked value)
    PhoneNumber phone = 1;

    // Mandatory field to be send be server. (masked value)
    string email_id = 2;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 3;
}

message ResetPasswordRequest {

    // Mandatory field.
    EmailPassword email_password = 1;

    // To verification to reset password.
    oneof auth {

        // old password
        string old_password = 2;

        // otp validation token.
        string otp_validation_token = 3;
    }
}

message FetchUserProfileResponse {

    // User profile details.
    UserProfile user_profile = 1;

    // Object will contain actions to handle error.
    ErrorHandlingDetails error_handling_details = 2;
}

message UpdateUserProfileRequest {

    oneof profile {

        // User name.
        string name = 1;

        // Nationality as per response received in fetchCountryList api.
        string nationality_code = 2;

        // Gender.
        Gender gender = 3;

        // Update phone number.
        UpdatePhone update_phone = 4;

        // Update Image url for profile pic.
        string profile_pic_url = 5;
    }
}

message OnBoardingStatusRequest {

    // on boarding status.
    OnBoardingStatus on_boarding_status = 1;
}

message UserInputRequest {
    oneof UserData {
        PhoneNumber phone = 1;
        string email_id = 2;
    }
}
